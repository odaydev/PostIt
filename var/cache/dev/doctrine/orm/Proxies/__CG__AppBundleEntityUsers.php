<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Users extends \AppBundle\Entity\Users implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'username', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'password', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'photo', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'presentation', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'inscription', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'birthday', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'last_connexion', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'isActive', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'isAccountNonExpired', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'isAccountNonLocked', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'isCredentialsNonExpired', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'isEnabled', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'roles', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'salt', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'commentaires', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'post', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'like'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'username', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'password', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'email', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'photo', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'presentation', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'inscription', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'birthday', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'last_connexion', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'isActive', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'isAccountNonExpired', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'isAccountNonLocked', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'isCredentialsNonExpired', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'isEnabled', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'roles', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'salt', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'commentaires', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'post', '' . "\0" . 'AppBundle\\Entity\\Users' . "\0" . 'like'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Users $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', []);

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', []);

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', []);

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoto($photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoto', [$photo]);

        return parent::setPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoto', []);

        return parent::getPhoto();
    }

    /**
     * {@inheritDoc}
     */
    public function setPresentation($presentation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPresentation', [$presentation]);

        return parent::setPresentation($presentation);
    }

    /**
     * {@inheritDoc}
     */
    public function getPresentation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPresentation', []);

        return parent::getPresentation();
    }

    /**
     * {@inheritDoc}
     */
    public function setInscription($inscription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInscription', [$inscription]);

        return parent::setInscription($inscription);
    }

    /**
     * {@inheritDoc}
     */
    public function getInscription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInscription', []);

        return parent::getInscription();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthday($birthday)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthday', [$birthday]);

        return parent::setBirthday($birthday);
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthday()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthday', []);

        return parent::getBirthday();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastConnexion($lastConnexion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastConnexion', [$lastConnexion]);

        return parent::setLastConnexion($lastConnexion);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastConnexion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastConnexion', []);

        return parent::getLastConnexion();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', [$token]);

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', []);

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedTs($createdTs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedTs', [$createdTs]);

        return parent::setCreatedTs($createdTs);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedTs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedTs', []);

        return parent::getCreatedTs();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive($isActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', [$isActive]);

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', []);

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAccountNonExpired($isAccountNonExpired)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAccountNonExpired', [$isAccountNonExpired]);

        return parent::setIsAccountNonExpired($isAccountNonExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAccountNonExpired', []);

        return parent::getIsAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAccountNonLocked($isAccountNonLocked)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAccountNonLocked', [$isAccountNonLocked]);

        return parent::setIsAccountNonLocked($isAccountNonLocked);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAccountNonLocked', []);

        return parent::getIsAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsCredentialsNonExpired($isCredentialsNonExpired)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsCredentialsNonExpired', [$isCredentialsNonExpired]);

        return parent::setIsCredentialsNonExpired($isCredentialsNonExpired);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsCredentialsNonExpired', []);

        return parent::getIsCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsEnabled($isEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsEnabled', [$isEnabled]);

        return parent::setIsEnabled($isEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsEnabled', []);

        return parent::getIsEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles($roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', [$salt]);

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function addPost(\AppBundle\Entity\Post $post)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPost', [$post]);

        return parent::addPost($post);
    }

    /**
     * {@inheritDoc}
     */
    public function removePost(\AppBundle\Entity\Post $post)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePost', [$post]);

        return parent::removePost($post);
    }

    /**
     * {@inheritDoc}
     */
    public function getPost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPost', []);

        return parent::getPost();
    }

    /**
     * {@inheritDoc}
     */
    public function addCommentaire(\AppBundle\Entity\Commentaires $commentaire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCommentaire', [$commentaire]);

        return parent::addCommentaire($commentaire);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCommentaire(\AppBundle\Entity\Commentaires $commentaire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCommentaire', [$commentaire]);

        return parent::removeCommentaire($commentaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentaires()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentaires', []);

        return parent::getCommentaires();
    }

}
